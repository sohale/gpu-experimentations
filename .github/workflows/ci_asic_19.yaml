on: # To web-hook to which events: "push", "PR" (creation or modificaiotn), "manual trigger"
  # push:
  pull_request:
  workflow_dispatch:

jobs:
  verilog-yosis-full:
    # amaranth-verilog-yosis-asic
    # riscv-formal:  # job name

    runs-on: ubuntu-latest # docker image
    # docker run -it ubuntu

    # initiate experiment 19: ASIC using OpenLANE

    steps:

      - name: Prepare (to be moved to a docker image)
        # see also : https://gist.github.com/jprjr/7667947
        run: |
          sudo apt-get update

          sudo apt-get install -y --no-install-recommends \
            make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev \
            libsqlite3-dev wget ca-certificates curl llvm libncurses5-dev \
            libncursesw5-dev \
            xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev mecab-ipadic-utf8 \
            git \
            make

          sudo apt-get install -y \
            pyenv
            #

          echo '
          export PYENV_ROOT="/root/dot.pyenv"
          mkdir -p "$PYENV_ROOT"
          export PATH=$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
          eval "$(ssh-agent -s)"
          pyenv version
          ' >> "$GITHUB_ENV"
          # The "$GITHUB_ENV" is automatically sourced in the next steps

      - name: Test use of pyenv
        run: |
          echo "GITHUB_ENV=$GITHUB_ENV"
          echo
          echo $PYENV_ROOT
          eval "$(ssh-agent -s)"
          pyenv version

          pyenv install 3.12.3
          pyenv shell 3.12.3
          # Yosys tested on 3.6?
          python --version

      - name: cp my neurasic1.v
        run: |
          echo '
            export TARGET_DIR="experiments/19_asic_lane/yosis-build"
          ' >> "$GITHUB_ENV"
          TARGET_DIR="experiments/19_asic_lane/yosis-build"
          mkdir -p "$TARGET_DIR"
          pwd
          cd "$TARGET_DIR"
          pwd

      - name: Checkout my verilog file
        uses: actions/checkout@v4 # registered (official) GH Action name
        with:
          sparse-checkout: | # pull a single file
            experiments/19_asic_lane/neurasic1.v
          sparse-checkout-cone-mode: false

      - name: skipped
      #- name: Checkout riscv-formal
        # never run:
        if: never()
        # if: false # never run
        uses: actions/checkout@v4
        with:
          #repository: YosysHQ/riscv-formal
          #path: experiments/19_asic_lane/build/riscv-formal
          # repository: YosysHQ/????
          # https://github.com/YosysHQ/oss-cad-suite-build/releases/tag/2024-06-04
          # https://github.com/YosysHQ/oss-cad-suite-build/releases/tag/2025-07-21
          # https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2025-07-21/oss-cad-suite-linux-x64-20250721.tgz
          # ./builder.py build --target=yosys : to create docker image
          # `click` ? https://pypi.org/project/click/
          path: experiments/19_asic_lane/yosis-build

      - uses: YosysHQ/setup-oss-cad-suite@v3
        # https://github.com/YosysHQ/oss-cad-suite-build/releases/tag/2025-07-01
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download and extract OSS CAD Suite
        run: |
          wget https://github.com/YosysHQ/oss-cad-suite-build/releases/download/2025-07-21/oss-cad-suite-linux-x64-20250721.tgz
          tar -xvzf oss-cad-suite-linux-x64-20250721.tgz

      - name: cp my neurasic1.v
        run: |
          # TARGET_DIR="experiments/19_asic_lane/yosis-build"
          # mkdir -p "$TARGET_DIR"
          echo "TARGET_DIR: $TARGET_DIR"
          cp experiments/19_asic_lane/neurasic1.v --target-directory="$TARGET_DIR"
          cd "$TARGET_DIR"

      - name: make checks
        run: |
          export TARGET_DIR="experiments/19_asic_lane/yosis-build"
          cd "$TARGET_DIR"
          echo "empty1"
          pwd
          echo "This will fail. Under construction (1)"
          make checks -j$(nproc)
          # see https://github.com/YosysHQ/picorv32/blob/main/Makefile

      - name: make check
        run: |
          # cd riscv-formal/cores/picorv32
          # make check
          export TARGET_DIR="experiments/19_asic_lane/yosis-build"
          cd "$TARGET_DIR"
          echo "empty2"
          pwd
          echo "Under construction (2)"


# Inspirations from:
# https://github.com/YosysHQ/picorv32/blob/main/.github/workflows/ci.yml
# 87c89acc18994c8cf9a2311e871818e87d304568

# /myvol/tpu_poc/qtpu/dev-env
